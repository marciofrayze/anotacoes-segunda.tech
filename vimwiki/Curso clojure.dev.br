= Curso clojure.dev.br =

== 1. Introdução ==

==== 1.1 Bem-vinda / Por que estudar Clojure/LISP?  ====

==== 1.2: Preparando ambiente  ====
- https://clojure.org/guides/getting_started  

==== 1.3: Usando linha de comando  ====
- clj - REPL  
- Olá mundo! (prinln "Olá mundo!")  
- A lenda de que clojure tem muitos parânteses: println("Olá mundo!") tem a mesma quantidade ;)  
- Primeiro símbolo depois do parânteses é sempre o nome da função. Demais é uma lista com os parâmetros desta função.  
- A função println retorna nulo, que em clojure é nil  
- Como fazer 2 + 2? (2 + 2) vai da erro ClassCastException  
- (+ 2 2) - print "O valor de 2+2 é:" (+ 2 2) - infixa  
- E como a gente faz 2 + 3 + 4 ? (+ (+ 2 3) 4) ou (+ 2 3 4)  
- Funções - / *  

==== 1.4: Vetores ====
- [1 2 3 4] ["acabaxi" "abobrinha" "limao"]  
- (println [1 2 3 4]) - vírgula é opcional  
- (count [1 2 3 4])  
- (println (count [1 2 3 4]))  
- Podemos misturar tipos: [1 2 3 "limao" "laranja" "abacate"]  
- "Adicionando" um elemento: (conj [1 2 3] 4)  
- Vetores são imutáveis  
- "Removendo" o último elento: (pop [1 2 3])  

==== 1.5: Criando nossas proprias funções  ====
{{{clojure
(defn imprimir-ola []  
  (println "Olá mundo!"))  

(defn parabenizar [nome]   
  (println "Parabéns" nome "!"))  
  
(defn parabenizar [nome]   
  (println "Parabéns" (str nome "!")))  
  
(defn parabenizar [nome]  
  (println "Seja bem-vinda ao curso de Clojure!")
  (println "Parabéns" nome)
  (println "Você fez uma ótima escolha!"))
  
(defn parabenizar [nome] 
  (println "Seja bem-vinda ao curso de Clojure!")
  (println "Parabéns" nome)
  (println "Você fez uma ótima escolha!")
  [1 2 3])
  
(defn inverter-ordem-dois-elementos [a b] 
  "Inverte a ordem de dois elementos"
  [b a])
  
(defn valor-multa 
  "Calcula valor da multa"
  [valor]
  (* valor 0.1))
}}}

==== 1.6: Funções puras ====
- O que são
- Exemplos
- Por que são importantes?
- Exemplo em js com mutabilidade (passando um objeto como parametro e alterando ele)
- Discutir concorrência
