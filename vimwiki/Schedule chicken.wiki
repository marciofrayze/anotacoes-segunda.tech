= Schedule chicken =

refs: 
* https://en.wikipedia.org/wiki/Schedule_chicken  
* https://www.goodreads.com/book/show/67839.Planning_Extreme_Programming (página 33)

Às vezes nos deparamos com uma situação onde duas ou mais
pessoas/times estão trabalhando com um objetivo em comum e
todas as pessoas envolvidas sabem que o prazo original acordado não
será cumprido.

Mas por medo (falta de [[Coragem]]?), ninguém quer ser a
primeira pessoa a dar a notícia.

O resultado é um impasse. As pessoas ficam esperando que alguma
outra seja a primeira a dizer que não será capaz de cumprir
o prazo.

Isso pode se prolongar até que chegue o prazo final, o que
piora toda situação, já que neste momento os times serão 
obrigados a confrontar a realidade em um momento em que
já não podem ter nenhuma ação para enfrentar o problema.
O projeto irá atrasar e a cliente só vai ser informada no dia
que deveria ser a entrega.

Se tivessem sido mais transparentes e honestos antes, poderiam ter
tentando resolver de outra forma (aumentando prazo, revendo
escopo, etc). Ou, no mínimo, controlado a expectativa da cliente,
avisando que o prazo acordado não será viável.

Normalmente isso acontece em um ambiente onde a cultura de
transparência não é incentivada.

Uma forma de mitigar isso são as práticas da [[Programação Extrema]].

== Exemplo real ==

Muitos anos atrás fiz parte de um grande projeto com múltiplos
times. Olhando agora é fácil observar as várias falhas de
gestão que existiam mas na época não enxergava muito bem o quão 
grave era a situação.

Meu time tinha em torno de 10 pessoas mas o projeto como um todo 
tinha quase 100. O chefe (vou usar aqui o termo "chefe" já que não consigo
considerar que era um líder) dividia as tarefas da forma mais simples possíve: 
cada analista seria responsável por uma funcionalidade do sistema. Para piorar,
ele impunha basicamente o mesmo cronograma para todas as pessoas,
independênte da dificuldade da funcionalidade em questão (em geral,
em torno de 1 mês). Sabíamos que aquilo estava errado, 
mas ninguém tinha coragem de questionar. Era um daqueles chefes com
fama de ser bravo e postura rígida.

Mas um dos analistas, que havia ficado com a parte mais complexa
do sistema, estava preocupado. As férias dele estavam chegando e
a parte do sistema que estava implementando não parava de 
receber mais e mais atribuições. Discutia com analistas de requisitos
e demais analistas de desenvolvimento, tentando passar parte
da responsabilidade para outras pessoas, em vão.

Faltando 15 dias para suas férias (que coincidia com o prazo final), 
em uma reunião diária, finalmente ele decidiu falar: 
não vou conseguir entregar a tempo. Preciso de ajuda.

Quando aquelas palavras saíram de sua boca, todo o time ficou em
silêncio absoluto. E o que veio em seguida já era esperado: o chefe
humilhando o analista na frente de todos. Mas ele aceitou colocar
outra pessoa para trabalhar junto com ele.

Sabe quando aquela funcionalidade ficou pronta? Mais de um ano
depois... Todos substimaram a sua complexidade,
mas só uma pessoa teve coragem de questionar. E foi perseguida por
isso. Algum tempo depois, optou por sair da empresa.
