= Coragem =

refs: 
* [[Livro Extreme Programming Explained]]
  * página xpto. 
* [[Livro Planning Extreme Programming]]
  * Capítulo 2: Fear, página 7.
* [[Livro Extreme Programming]]
  * Capítulo 3: Valores do XP, página 55.
* Site Desenvolvimento Ágil
  * https://www.desenvolvimentoagil.com.br/xp/valores/coragem

Coragem é um dos valores fundamentais da [[Programação Extrema]],
junto com comunicação, simplicidade, feedback e respeito.

Ter coragem, neste contexto, não é sobre a coragem necessária
para que um soldado consiga enfrentar uma guerra. Também não é 
sobre agir de forma irresponśavel, pulando do avião sem paraquedas.

A questão é que ao desenvolvermos softwares vamos encarar 
situações que vão causar medo, tanto nas pessoas desenvolvedoras
quanto em nossas clientes.

Em um ambiente em que os valores fundamentais da Programação Extrema
ainda não foram internalizados, aplicar essas mudanças pode
ser assustador para ambas as partes.

Embora a história nos mostre que é muito comum as necessidades
da cliente mudarem ao longo do desenvolvimento de um produto,
ainda é comum ambos os lados (desenvolvedoras e clientes) 
tentarem criar barreiras para se proteger.

A cliente tem medo de ser enganada. Tem receio de ter
que entregar o futuro do projeto nas mãos de pessoas técnicas
que não necessariamente estarão engajadas. 
Tem medo de perder controle e não ter suas expectativas
atendidas.

O time de desenvolvimento por sua vez tem medo de ficar
sobrecarregado, não ter informações necessárias para
finalizar seu trabalho ou ter que se sujeitar a um cronograma
que torna viável implementar o software com a qualidade que
gostariam.

Estes são apenas alguns dos medos que temos que encarar
quando decidimos implementar um software. Em um ambiente
assim, é comum que ambos os lados tentem levantar um muro,
tentando se proteger. Mas, claro,



Por isso exige que o time de desenvolvimento
se comprometa com grandes entregas e um cronograma extremamente
detalhado e inflexível. Uma vez assinado o contrato, espera que
seja entregue por completo na data acordada.

Já as desenvoledoras vão tentar 










Por exemplo:
* Medo de fazer uma nova publicação em produção. 
* Medo de refatorar um trecho do código. 
* Medo de apagar um trecho de código morto.
* Medo de atualizar a versão de uma biblioteca ou framework.
* Medo de expressar nossas opiniões.
* Medo de informar que cometemos um erro.
* Medo de não conseguir cumprir prazos acordados.
* Medo de não atingir as expectativas geradas por outras pessoas.

Muitas vezes o medo causa uma reação paralisante e não agimos quando
deveríamos. Mas existem momentos em que o medo pode nos levar
a realizar ações inconsequentes. Em situações adversas é preciso ter
coragem para *não* agir até entender melhor o que está
acontecendo, para então encontrar a melhor forma de solucionar o
problema que estamos enfrentando.

Por exemplo: se o sistema estiver instável e não conseguimos
ainda encontrar a origem do problema, às vezes precisamos
ter coragem para continuar nossa investigação sem tomar nenhuma
atitude precipitada, que pode agravar ainda mais a situação ou
mascarar a real origem, que pode se manifestar novamente em outro
momento. Assim evitamos aqueles diálogos do tipo:
{{{
- Pronto! Voltou a funcionar!
- Ótimo! O que você fez?
- Várias coisas.
- O que?
- Ahhh várias coisas.
- Mas qual era o problema?
- Não sei...
- Mas qual alteração resolveu o problema?
- Não sei...
- Mas o problema pode voltar a acontecer???
- Não sei...
}}}

Já presenciei várias vezes eventos onde as pessoas estavam fazendo
várias alterações arriscadas direto em produção, sem saber se aquilo 
tinha chances de corrigir o problema, já que não não haviam ainda
idenfitificado a causa. E no fim descobriam que era uma problema
na infraestrutura ou em outro sistema ou qualquer outra coisa que
estava fora da visão do time e que nenhuma das ações realizadas
tinham relação com a origem do problema.

Precisamos de paciência e coragem para analisar com calma a
situação antes de tomar alguma ação. 

Uma boa forma de minimizar estes medos é utilizar as práticas da 
[[Programação Extrema]]. Elas vão nos ajudar a minimizar as causas 
destes medos, permitindo que tenhamos mais coragem de refatorar 
o código do sistema, melhorar o design, expressar nossas 
opiniões mais abertamente, etc.

Outro momento em que o uso da coragem pode nos ajudar é
quando estamos enfrentando um [[Schedule chicken]].

Para entender mais sobre Programação Extrema recomendo a leitura
dos seguintes livros:
* [[Livro Extreme Programming Explained|Extreme Programming Explained]]
* [[Livro Planning Extreme Programming|Planning Extreme Programming]]
